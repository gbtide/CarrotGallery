apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 프로젝트 자바 8 설정
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions.jvmTarget = "1.8"

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.appcompat:appcompat:${project.appcompat}"

    // project module
    // shared 가져가는 쪽에서 model도 handling 할 수 있어야 하므로 api.
    api(project(":model"))

    // ktx
    implementation "androidx.core:core-ktx:${project.core_ktx}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${project.lifecycle_ktx}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${project.lifecycle_ktx}"

    // hilt
    implementation "com.google.dagger:hilt-android:${project.hilt_android}"
    kapt "com.google.dagger:hilt-android-compiler:${project.hilt_android_compiler}"

    // coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:${project.coroutines}"

    // rxjava
    api "io.reactivex.rxjava3:rxandroid:${project.rxjava}"
    api "io.reactivex.rxjava3:rxjava:${project.rxjava}"

    // jakewharton Timber
    api "com.jakewharton.timber:timber:${project.timber}"

    // retrofit2
    api("com.squareup.retrofit2:retrofit:${project.retrofit}") {
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:converter-gson:${project.gson_converter}"
    implementation "com.squareup.okhttp3:okhttp:${project.okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${project.okhttp_interceptor}"
    implementation "com.google.code.gson:gson:${project.gson}"

    // test
    testImplementation "junit:junit:${project.junit}"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}